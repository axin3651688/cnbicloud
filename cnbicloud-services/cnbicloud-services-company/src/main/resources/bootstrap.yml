<<<<<<< HEAD:cnbicloud-provides/cnbicloud-provides-dept/src/main/resources/bootstrap.yml
spring:
  cloud:
    config:
      name: cnbicloud-provider-dept    # 定义要读取的资源文件的名称
      profile: beta      # 定义profile的 名称
      label: master     # 定义配置文件所在的分支
      #uri: http://config118-7101.com:7101  # SpringCloudConfig的服务地址
      username: mldnjava  # 连接的用户名
      password: hello   # 连接的密码
      discovery:
        enabled: true   # 通过配置中心加载配置文件
        service-id: CNBICLOUD-CONFIG   # 在eureka之中注册的服务ID cnbicloud-config
      
eureka: # 一定要编写一个eureka的地址
  client: # 目的是为了让客户端可以通过eureka找到SpringCloudConfig微服务
    service-url:
      defaultZone: http://edmin:mldnjava@192.168.1.118:7001/eureka,http://edmin:mldnjava@192.168.1.108:7001/eureka
  instance:
    lease-renewal-interval-in-seconds: 5 # 设置心跳的时间间隔（默认是30秒）
    lease-expiration-duration-in-seconds: 8 # 如果现在超过了5秒的间隔（默认是90秒）
    instance-id: dept108-8002.com  # 在信息列表时显示主机名称
    prefer-ip-address: true 
=======
spring:
  cloud:
    config:
      name: cnbicloud-provider-apps    # 定义要读取的资源文件的名称
      profile: dev      # 定义profile的 名称
      label: master     # 定义配置文件所在的分支
      #uri: http://config118-7101.com:7101  # SpringCloudConfig的服务地址
      username: mldnjava  # 连接的用户名
      password: hello   # 连接的密码
      discovery:
        enabled: true   # 通过配置中心加载配置文件
        service-id: CNBICLOUD-CONFIG   # 在eureka之中注册的服务ID cnbicloud-config
      
eureka: # 一定要编写一个eureka的地址
  client: # 目的是为了让客户端可以通过eureka找到SpringCloudConfig微服务
    service-url:
      defaultZone:  ${EUREKA_HOME}
  instance:
    prefer-ip-address: true     # 在地址栏上使用IP地址进行显示
    instance-id: ${spring.application.name}118-${server.port}.com
>>>>>>> 46849f9e614725c540dee6367c27eb9b7d1d51c4:cnbicloud-services/cnbicloud-services-company/src/main/resources/bootstrap.yml
